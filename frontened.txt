// npx create vite@latest . create frontned ,then npm run dev
// using tailwindcss  version 3.3.17 -> go to getstarted->select frameworkd guides->vite-> then npm install -D tailwindcss@3 postcss autoprefixer-> then
npx tailwindcss init -p-> it create two file tailwind.config.js and postcss.config.js ->in tailwind.config.js and index.css put whatever written in tailwind doc

//delete app.css file and assets folder and remove everthng from app.jsx and write rfce click

// use daisy UI select version 4 and under tailwind.config.js file in plugins add required('daisyui')



///***************Arrow function vs regularfunction using function keyworkd**********
✅ 1. Using function keyword (Regular function):
jsx
Copy code
function HomePage() {
  return (
    <div>
      Home Page
    </div>
  );
}
export default HomePage;
✅ 2. Arrow function syntax:
jsx
Copy code
const HomePage = () => {
  return (
    <div>
      Home Page
    </div>
  );
};
export default HomePage;




//*************************BLOW YOUR MIND*********
📝 Quick Summary:
If in file you write	Then import like this
export default CallPage;	import CallPage from ...
export function CallPage() {}	import { CallPage } from ...



//***************************REACT HOT TOAST
used to show notification of diffrent type in frontened




//************** axios and react query tanstack query
  const [data, setData] = React.useState(null);
  const [loading, setLoading] = React.useState(true);
  const [error, setError] = React.useState(null); 

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch('https://jsonplaceholder.typicode.com/posts');
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        const result = await response.json();
        setData(result);
      } catch (error) {
        setError(error);
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }
  , []);


 instead of writting this we can use query and written in short way 









 //*******************usestate and useeffect*************
 🧠 Explanation for Beginners
🟩 useState
Syntax: const [stateVariable, setStateVariable] = useState(initialValue)

Example: const [count, setCount] = useState(0)

It is used to store and update values in a component.

Whenever setCount() is called, the component re-renders.

🟦 useEffect
Syntax: useEffect(callback, [dependencies])

Runs after the component renders.

In this case:

js
Copy code
useEffect(() => {
  // Runs only once after component is first shown
}, []);
The empty [] means it runs only once, like componentDidMount.






///**********************tanstack query **********
💡 Summary
Concept	Meaning (Simple)
useQuery()	Ask for data from the server
queryKey	Name of your request
queryFn	The function that does the actual fetch
data	The answer from server
isLoading	Shows if data is still coming
error	Shows what went wrong
retry: false	Don’t try again if it fails


//****************************axios and axiosinstance********
axiosinstance means you have created another file and save 
✅ What's axiosInstance?
You didn’t write just axios.get(...). You wrote axiosInstance.get(...).
That means you’ve already created a special version of Axios in another file like this:



//*********************storyset.com to get best image accordign to your project need*************


//***********************zustand ****************
just create a hook with counter function and useed this anywhere

